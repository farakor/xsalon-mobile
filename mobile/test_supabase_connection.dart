import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:supabase_flutter/supabase_flutter.dart';

void main() async {
  print('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...');
  
  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
    await dotenv.load(fileName: ".env");
    
    final supabaseUrl = dotenv.env['SUPABASE_URL'] ?? '';
    final supabaseAnonKey = dotenv.env['SUPABASE_ANON_KEY'] ?? '';
    
    print('üìç URL: $supabaseUrl');
    print('üîë ANON Key: ${supabaseAnonKey.substring(0, 20)}...');
    
    if (supabaseUrl.isEmpty || supabaseAnonKey.isEmpty) {
      print('‚ùå –û—à–∏–±–∫–∞: –ü—É—Å—Ç—ã–µ –∫–ª—é—á–∏ –≤ .env —Ñ–∞–π–ª–µ');
      return;
    }
    
    if (!supabaseAnonKey.startsWith('eyJ')) {
      print('‚ùå –û—à–∏–±–∫–∞: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ANON –∫–ª—é—á–∞');
      return;
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Supabase
    await Supabase.initialize(
      url: supabaseUrl,
      anonKey: supabaseAnonKey,
      debug: true,
    );
    
    print('‚úÖ Supabase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
    final client = Supabase.instance.client;
    
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (–¥–æ–ª–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å null –±–µ–∑ –æ—à–∏–±–∫–∏)
    final user = client.auth.currentUser;
    print('üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user?.id ?? "–Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"}');
    
    print('üéâ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    print('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase: $error');
  }
}
